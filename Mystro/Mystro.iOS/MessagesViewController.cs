// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using UIKit;
using MonoTouch.Dialog;
using System.Threading.Tasks;
using iOSsample;
using GravatarMobile.iOS;
using System.Drawing;
using System.Collections.Generic;
using System.Linq;
using BubbleCell;
using GravatarMobile.Core;

namespace Mystro.iOS
{
	public partial class MessagesViewController : DialogViewController
	{
		public MessagesViewController (IntPtr handle) : base (handle)
		{
			Pushing = true;
			Root = new RootElement ("Messages") {new Section()};
		}

		public MessagesViewController () : base (new RootElement ("Messages") {new Section()},true)
		{
		}

		QSUserService userService;
		QSMessagingService messageService;

		bool useRefreshControl = false;

		public override async void ViewDidLoad ()
		{
			base.ViewDidLoad ();
			AddRefreshControl ();
			try
			{
				userService = new QSUserService(AppDelegate.LoggedUser);
				AppDelegate.LoggedUser = await userService.GetDataAsync();

				messageService = new QSMessagingService(AppDelegate.LoggedUser);
			}
			catch (UriFormatException)
			{
				var alert = new UIAlertView("Error", "Please make sure you update the applicationURL and applicationKey to match the mobile service you have created.", null, "OK");
				alert.Show();
				return;		        
			}

			userService.BusyUpdate += (bool busy) => {
//				if (busy)
//					activityIndicator.StartAnimating ();
//				else 
//					activityIndicator.StopAnimating ();
			};

	

			await RefreshAsync ();

		}

		async Task RefreshAsync ()
		{
			// only activate the refresh control if the feature is available
			if (useRefreshControl)
				RefreshControl.BeginRefreshing ();

			await userService.RefreshDataAsync ();

			if (useRefreshControl) 
				RefreshControl.EndRefreshing ();

			checkForMessages ();
		}

		#region * iOS Specific Code
		// This method will add the UIRefreshControl to the table view if
		// it is available, ie, we are running on iOS 6+
		void AddRefreshControl ()
		{
			if (UIDevice.CurrentDevice.CheckSystemVersion (6, 0)) {
				// the refresh control is available, let's add it
				RefreshControl = new UIRefreshControl ();
				RefreshControl.ValueChanged += async (sender, e) => {
					await RefreshAsync ();
				};
				useRefreshControl = true;
			}
		}
		#endregion

		private async void checkForMessages() {
		
			if (userService == null || userService.UserItems == null) {
				return;
			}
			else {
				Root[0].Clear ();

				await messageService.RefreshDataAsync ();

				foreach (User u in userService.UserItems){
					
					var gravView = new GravatarView(RectangleF.Empty);

					//refernece the instance of GravatarView
					gravView.Avatar = new Gravatar(u.Username);
					//load avatar of a specific size
					await gravView.Avatar.LoadImageAsync(30);

				
					UIImage image = null;
					try {

						image = new UIImage(NSData.FromArray(gravView.Avatar.Image));
					} catch (Exception ) {
						// If this fails, contact Atl Arredondo @ atlsaber@gmail.com ;)
					}

					if(messageService != null && messageService.Items != null){

						Message msg = messageService.Items.Where (m => m.From == u.Username || m.To == u.Username).OrderByDescending (m => m.DT).FirstOrDefault ();
						string s = "No messages";
						if (msg != null)
						if (msg.From == AppDelegate.LoggedUser.Username)
							s = "You: " + msg.Msg;
						else
							s = msg.Msg;
						
						Root[0].Add(new CustomStyledStringE(u.Username, s
							, UITableViewCellStyle.Subtitle, () => {

								RootElement r = new RootElement(u.Username){new Section()};

								var l = messageService.Items.Where (m => m.From == u.Username || m.To == u.Username).OrderBy (m => m.DT).ToList();
								foreach(Message m in l) {

									if (m.From == AppDelegate.LoggedUser.Username){
										r[0].Add(new ChatBubble (false, m.Msg));
									}else 
									{
										r[0].Add(new ChatBubble (true, m.Msg));
									}
								}


								NavigationController.PushViewController(new MessagingViewController(r, messageService, userService), true);

							} ){Image = image});
					}
					else 
					{
						Root[0].Add(new CustomStyledStringE(u.Username, "No messages", UITableViewCellStyle.Subtitle, () => {

							NavigationController.PushViewController(new MessagingViewController(new RootElement(u.Username){new Section()}, messageService , userService), true);

						} ){ Image = image});
					}
				}
			}
		}

		private class CustomStyledStringE : StyledStringElement {

			public CustomStyledStringE(string s1, string s2, UITableViewCellStyle s, Action a): base(s1, s2, s){

				this.Tapped += a;
			}
		}
	}


}
